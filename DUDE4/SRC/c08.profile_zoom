#!/bin/csh
# EJG/PL March 2010
# 
#===========================================================
#                      c08.profile_zoom 
#===========================================================
# this script makes record sections that are aligned on 
# some seismic phase of interest.  we first make a list
# of records that we wish to profile, then feed them to
# a fortran 90 code to convert SAC fmt files to ascii, 
# after some quick processing in SAC, then plot the 
# result with GMT.  
#
# the f90 code was written by Pei-ying (Patty) Lin at
# ASU. any errors are undoubtedly mine, as I modified things.

# INPUT:  (1) station/event location info and distances from
# -----       master info file
#         (2) plot box bounds: Dist min/max, time min/max
#         (3) some directory location information
#         (4) reference phase of interest, and component
#             of motion for plotting


# OUTPUT:  (1) postscript plot for phase_comp
# -----    (2) postscript plot for phase_comp, low passed
#
# KNOWN BUG
# the fortran code that grabs information from
# the SAC files complains about some of the SAC
# header fields having undefined values.  But
# this is some kind of a protocol bug and does 
# not affect any output.  The error scrolls to
# standard out as, for example:
# "ERROR 1336: Undefined header field value. KT6"
 
echo " "
echo "-------------------------------------------------------------"
echo "                c08.profile_zoom: STARTING"
echo "-------------------------------------------------------------"

set EVENT     = $1
set DIRSRC    = $2
set DIRDATA   = $3
set DIRPLOT   = $4
set DISTMIN   = $5
set DISTMAX   = $6
set TIMEMIN   = $7
set TIMEMAX   = $8
set PHASE     = $9
set COMP      = $10

# go to the data directory
set DIRPWD = ` pwd `
cd $DIRDATA/$EVENT

# source the environment variables

# make travel time curves
echo "$DIRSRC/c98.TraveltimeCurve_zoom $EVENT $DIRSRC $DIRDATA $DIRPLOT $DISTMIN $DISTMAX $TIMEMIN $TIMEMAX $PHASE $COMP c08" >! run_TC.sh
csh  run_TC.sh < /dev/null &

# define the master file location / name
set MASTER = $DIRDATA/$EVENT/eventStation.$EVENT

# loose the header line, and distance out of our range:
awk ' NR>1 && $3>='$DISTMIN' && $3<='$DISTMAX' {print $0}' $MASTER >! INFIL

# define event coords and mag
set COORDS = ` awk ' NR==1 {print $11,$12,$13,$16}' INFIL `
set NSTA   = ` wc -l INFIL | awk '{print $1}' `
set ELAT   = $COORDS[1] 
set ELON   = $COORDS[2] 
set EZ     = $COORDS[3] 
set EMAG   = $COORDS[4] 

# plot Z, and R, and T as separate plots.  We will also
# do a band pass filter (in SAC). We will make two
# versions: raw and low pass filtered.
# thus we are making 6 plots: Z, R, T raw, and Z,
# R, T low passed.

# define the corners for the "raw" data in the band
# pass filter.  this is here for those that wish
# to get rid of the long period noise in the traces
# do it with a band pass, thus, 2 corners needed. 
set B1 = 0.01
set B2 = 1.0

# define the low pass corner:
set F = 0.05

# make the awkfile that will be run by SAC. it is
# basically how we will precondition our records before
# our fortran90 code that converts to ascii:
echo "c08.profile_zoom: making the SAC macro"
cat << EOF >! awkfile
{
print "r *." \$1 ".?H${COMP}.sac"  
print "rmean" 
print "rtr" 
print "taper" 
print "bp co $B1 $B2 n 2 p 2" 
print "interp d 0.05"
print "w " \$1".$COMP " 
print "lp co $F n 2 p 2" 
print "w " \$1".${COMP}lp" 
} 
EOF

# make the sac macro now, using our awkfile
awk -f awkfile INFIL >! $EVENT.m.process

echo "c08.profi_zoom: running the SAC macro"
# run the sac macro
sac << END >! out.sac
m $EVENT.m.process
quit
END

# make list of seismograms, for our f90 code
ls *.${COMP} >! ${COMP}.LIST
ls *.${COMP}lp >! ${COMP}lp.LIST

# time to convert files to ASCII, using an f90 code
# written by Pei-ying (Patty) Lin, PhD student in the
# geophysics/seismology group at ASU. code sac2xyzoom.f90
# makes output called "xy.seismograms".
# amplitude scaling is pre-determined, but can be
# changed with AMPSCALE:
set AMPSCALE = 1.0

# compile code:
#$FCOMP -m32 -I$DIRSRC $DIRSRC/sac2xyzoom.f90 $SACLIBs -o SAC2XYZOOM
$FCOMP -I$DIRSRC $DIRSRC/sac2xyzoom.f90 $SACLIBs -o SAC2XYZOOM

# run the code
foreach TYPE ( $COMP ${COMP}lp )
echo "c08.profile_zoom: converting $TYPE SAC files to XY"
SAC2XYZOOM << EOF >! out.sac2xyzoom
$PHASE
$TIMEMIN $TIMEMAX
$DISTMIN $DISTMAX
$AMPSCALE
$TYPE.LIST
EOF
#mv xy.seismograms xy.$TYPE.seismograms
grep -v NaN xy.seismograms >!  xy.$TYPE.seismograms 
end
# note: the output is a big file


#===========================================================
#             PLOTTING TIME!!!
#===========================================================

echo "c08.profile_zoom: just finished making PLOT FILES"

# plot the text of the title,
# also, plot a big title at top of page:
# first, break apart event name for Big Title:
set YYYY = ` echo $EVENT | cut -c1-4 `
set MM   = ` echo $EVENT | cut -c5-6 `
set DD   = ` echo $EVENT | cut -c7-8 `
set HH   = ` echo $EVENT | cut -c9-10 `
set MIN  = ` echo $EVENT | cut -c11-12 `

# plot size (the f90 sac2xy code assumes these are the dimensions
# we are working with)
set XSIZE = 6
set YSIZE = 8.5 

# crunch some axis attributes for plot:
# well put dist on horiz axis, and time on vertical
#set BX    = `echo $TIMEMIN $TIMEMAX | awk '{print (int(int(($2-$1)/10)/50)+1)*50 }' | awk '{print $1, $1/5}'`
set BX    = `echo $TIMEMIN $TIMEMAX | awk '{print $2-$1}' | awk '{ if ( $1/100 >= 20 ) {print 500,100} else if ( $1/100 < 10 ) {print 100, 10} else {print 200, 20} }'`
set BY    = `echo $DISTMIN $DISTMAX | awk '{print (int(int(($2-$1)/10)/5)+1)*5 }' |  awk '{print $1, $1/5}'`
set SCALE = X"$XSIZE"i/-"$YSIZE"i
set RANGE = $TIMEMIN/$TIMEMAX/$DISTMIN/$DISTMAX/
set BAXIS = a"$BX[1]"f"$BX[2]"/a"$BY[1]"f"$BY[2]"
set Y0 = -Y1.5i

# now build the plots, one type at a time
foreach TYPE ( $COMP ${COMP}lp )

# define the output file
set OUTFILE = $DIRPLOT/$EVENT.c08.profile_zoom.$PHASE.$TYPE.ps

# plot some text
pstext -Jx1i -R0/6/0/9 -K -N -P $Y0 << END >! $OUTFILE
3.0 9.3 20  0 0 CB Event: ${MM}/${DD}/$YYYY ${HH}:${MIN} Phase=$PHASE Comp=$TYPE
3.0 9.0 15  0 0 CB $EVENT  LAT=$ELAT LON=$ELON Z=$EZ Mb=$EMAG NSTA=$NSTA
-0.5 4.5 15 90 0 CB Distance (deg)
3.0 -0.7 15  0 0 CB Time after PREM ${PHASE}-wave time (sec)
END

# more text: script name and time stamp
echo "3.0 8.7 10 0 0 CB SCRIPT: c08.profile_zoom" >! datetag1
date "+CREATION DATE: %m/%d/%y  %H:%M:%S" >! datetag2
paste datetag1 datetag2 >! datetag3
pstext datetag3 -Jx -R -N -Wored -G0 -O -K >> $OUTFILE


# initiate coords for traces and curves
psbasemap -J$SCALE -R$RANGE -B"$BAXIS"WSne -K -O -P >> $OUTFILE

# plot the records
psxy xy.$TYPE.seismograms -J$SCALE -R$RANGE -W0.005i/0 $MGMT -O -K >> $OUTFILE

# # Modified by Shule =============== >
# psxy -J -R -W0.1p,red,- -O -K >> $OUTFILE << EOF
# -5 $DISTMIN
# -5 $DISTMAX
# EOF
# 
# psxy -J -R -W0.1p,green,- -O -K >> $OUTFILE << EOF
# -10 $DISTMIN
# -10 $DISTMAX
# EOF
# 
# psxy -J -R -W0.1p,blue,- -O -K >> $OUTFILE << EOF
# -15 $DISTMIN
# -15 $DISTMAX
# EOF
# 
# psxy -J -R -W0.2p,red,- -O -K >> $OUTFILE << EOF
# 5 $DISTMIN
# 5 $DISTMAX
# EOF
# 
# psxy -J -R -W0.2p,green,- -O -K >> $OUTFILE << EOF
# 10 $DISTMIN
# 10 $DISTMAX
# EOF
# 
# psxy -J -R -W0.2p,blue,- -O -K >> $OUTFILE << EOF
# 15 $DISTMIN
# 15 $DISTMAX
# EOF
# 
# psxy -J -R -W0.3p,darkred,- -O -K >> $OUTFILE << EOF
# 20 $DISTMIN
# 20 $DISTMAX
# EOF
# 
# psxy -J -R -W0.3p,darkblue,- -O -K >> $OUTFILE << EOF
# 25 $DISTMIN
# 25 $DISTMAX
# EOF
# 
# psxy -J -R -W0.3p,darkgreen,- -O -K >> $OUTFILE << EOF
# 30 $DISTMIN
# 30 $DISTMAX
# EOF
# # Modified by Shule < ===============

# close up plot
pstext -JX -R -O  << END >> $OUTFILE
END

end

#some clean up, lists, tmp records, etc.
\rm *.? *.?lp  datetag?
\rm *.LIST xy*seismograms
\rm  SAC2XYZOOM out.sac out.sac2xyzoom
\rm INFIL awkfile $EVENT.m.process
\rm run_TC.sh 
# return to our pwd
cd $DIRPWD

 
echo "-------------------------------------------------------------"
echo "                c08.profile_zoom: DONE"
echo "-------------------------------------------------------------"
echo " "

#EOF
