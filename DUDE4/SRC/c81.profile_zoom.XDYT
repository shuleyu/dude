#!/bin/csh
# EJG/PL March 2010
# 
#===========================================================
#                      c81.profile_zoom 
#===========================================================
# this script makes record sections that are aligned on 
# some seismic phase of interest.  we first make a list
# of records that we wish to profile, then feed them to
# a fortran 90 code to convert SAC fmt files to ascii, 
# after some quick processing in SAC, then plot the 
# result with GMT.  
#
# the f90 code was written by Pei-ying (Patty) Lin at
# ASU. any errors are undoubtedly mine, as I modified things.

# INPUT:  (1) station/event location info and distances from
# -----       master info file
#         (2) plot box bounds: Dist min/max, time min/max
#         (3) some directory location information
#         (4) reference phase of interest, and component
#             of motion for plotting


# OUTPUT:  (1) postscript plot for phase_comp
# -----    (2) postscript plot for phase_comp, low passed
#
# KNOWN BUG
# the fortran code that grabs information from
# the SAC files complains about some of the SAC
# header fields having undefined values.  But
# this is some kind of a protocol bug and does 
# not affect any output.  The error scrolls to
# standard out as, for example:
# "ERROR 1336: Undefined header field value. KT6"
 
echo " "
echo "-------------------------------------------------------------"
echo "                c81.profile_zoom: STARTING"
echo "-------------------------------------------------------------"

set EVENT     = $1
set DIRSRC    = $2
set DIRDATA   = $3
set DIRPLOT   = $4
set DISTMIN   = $5
set DISTMAX   = $6
set TIMEMIN   = $7
set TIMEMAX   = $8
set PHASE     = $9
set COMP      = $10
set B1       = $11
set B2       = $12
set FLAG_plotTYPE = $13 # 1: seismograms/ 2: amp

# go to the data directory
set DIRPWD = ` pwd `
cd $DIRDATA/$EVENT

# source the environment variables


# define the master file location / name
set MASTER = $DIRDATA/$EVENT/eventStation.$EVENT

# loose the header line, and distance out of our range:
awk ' NR>1 && $3>='$DISTMIN' && $3<='$DISTMAX' && $2 == "TA" {print $0}' $MASTER >! INFIL

# define event coords and mag
set COORDS = ` awk ' NR==1 {print $11,$12,$13,$16}' INFIL `
set NSTA   = ` wc -l INFIL | awk '{print $1}' `
set ELAT   = $COORDS[1]
set ELON   = $COORDS[2]
set EZ     = $COORDS[3]
set EMAG   = $COORDS[4]


# make the awkfile that will be run by SAC. it is
# basically how we will precondition our records before
# our fortran90 code that converts to ascii:
echo "c81.profile_zoom: making the SAC macro"
cat << EOF >! awkfile
{
print "r *." \$1 ".?H${COMP}.sac"  
print "rmean" 
print "rtr" 
print "taper" 
print "bp co $B1 $B2 n 2 p 2" 
print "envelope"
print "ch t1 undef"
print "w " \$1".$COMP " 
} 
EOF

# make the sac macro now, using our awkfile
awk -f awkfile INFIL >! $EVENT.m.process

echo "c08.profile_zoom: running the SAC macro"
# run the sac macro
sac << END >! out.sac
m $EVENT.m.process
quit
END
# make list of seismograms, for our f90 code
ls *.${COMP} >! ${COMP}.LIST

# set t1 to the header
set insac = 1
set nnsac =  `wc -l < ${COMP}.LIST`
while ( $insac <= $nnsac )
  set sacfile =  `cat ${COMP}.LIST | awk 'NR == '$insac' {print $1}' `
  taup_setsac -mod prem -ph "$PHASE"-1 $sacfile  
@ insac ++
end


# time to convert files to ASCII, using an f90 code
# written by Pei-ying (Patty) Lin, PhD student in the
# geophysics/seismology group at ASU. code sac2xyzoom.f90
# makes output called "xy.seismograms".
# amplitude scaling is pre-determined, but can be
# changed with AMPSCALE:
set AMPSCALE = 1.0

# compile code:
#$FCOMP -m32 -I$DIRSRC $DIRSRC/sac2xyzoom.f90 $SACLIBs -o SAC2XYZOOM
$FCOMP -I$DIRSRC $DIRSRC/sac2xyzoom_LTW.f90 $SACLIBs -o SAC2XYZOOM

# run the code
foreach TYPE ( $COMP )
echo "c81.profile_zoom.XDYT: converting $TYPE SAC files to XY"
SAC2XYZOOM << EOF >! out.sac2xyzoom
$PHASE
$TIMEMIN $TIMEMAX
$DISTMIN $DISTMAX
$AMPSCALE
$TYPE.LIST
EOF
#mv xy.seismograms xy.$TYPE.seismograms
grep -v NaN xy.seismograms >!  xy.$TYPE.seismograms 
grep -v NaN xyz.seismograms >!  xyz.$TYPE.seismograms
end
# note: the output is a big file


#===========================================================
#             PLOTTING TIME!!!
#===========================================================

echo "c81.profile_zoom.XDYT: just finished making PLOT FILES"

# plot the text of the title,
# also, plot a big title at top of page:
# first, break apart event name for Big Title:
set YYYY = ` echo $EVENT | cut -c1-4 `
set MM   = ` echo $EVENT | cut -c5-6 `
set DD   = ` echo $EVENT | cut -c7-8 `
set HH   = ` echo $EVENT | cut -c9-10 `
set MIN  = ` echo $EVENT | cut -c11-12 `

# plot size (the f90 sac2xy code assumes these are the dimensions
# we are working with)
set XSIZE = 6
set YSIZE = 8.5 

# crunch some axis attributes for plot:
# well put dist on horiz axis, and time on vertical
#set BX    = `echo $TIMEMIN $TIMEMAX | awk '{print (int(int(($2-$1)/10)/50)+1)*50 }' | awk '{print $1, $1/5}'`
#set BX    = `echo $TIMEMIN $TIMEMAX | awk '{print $2-$1}' | awk '{ if ( $1/100 >= 20 ) {print 500,100} else if ( $1/100 < 10 ) {print 100, 10} else {print 200, 20} }'`
#set BY    = `echo $DISTMIN $DISTMAX | awk '{print (int(int(($2-$1)/10)/5)+1)*5 }' |  awk '{print $1, $1/5}'`
#set SCALE = X"$XSIZE"i/-"$YSIZE"i
#set RANGE = $TIMEMIN/$TIMEMAX/$DISTMIN/$DISTMAX/
#set BAXIS = a"$BX[1]"f"$BX[2]"/a"$BY[1]"f"$BY[2]"

set BY    = `echo $TIMEMIN $TIMEMAX | awk '{print $2-$1}' | awk '{ if ( $1/100 >= 20 ) {print 500,100} else if ( $1/100 < 10 ) {print 100, 10} else {print 200, 20} }'`
set BX    = `echo $DISTMIN $DISTMAX | awk '{print (int(int(($2-$1)/10)/5)+1)*5 }' |  awk '{print $1, $1/5}'`
set SCALE = X"$XSIZE"i/"$YSIZE"i
set RANGE = $DISTMIN/$DISTMAX/$TIMEMIN/$TIMEMAX
set BAXIS = a"$BX[1]"f"$BX[2]"/a"$BY[1]"f"$BY[2]"




set Y0 = -Y1.5i

# now build the plots, one type at a time
foreach TYPE ( $COMP )

# define the output file
if ( $FLAG_plotTYPE ==  1 ) then
set OUTFILE = $DIRPLOT/$EVENT.c81.profile_zoom.XDYT.$PHASE.$TYPE.bp"$B1"_"$B2".ps
else if ( $FLAG_plotTYPE ==  2 ) then
set OUTFILE = $DIRPLOT/$EVENT.c81.profile_zoom.XDYT.$PHASE.$TYPE.bp"$B1"_"$B2".amp.ps
endif

# plot some text
pstext -Jx1i -R0/6/0/9 -K -N -P $Y0 << END >! $OUTFILE
3.0 9.3 20  0 0 CB Event: ${MM}/${DD}/$YYYY ${HH}:${MIN} Phase=$PHASE Comp=$TYPE
3.0 9.0 15  0 0 CB $EVENT  LAT=$ELAT LON=$ELON Z=$EZ Mb=$EMAG NSTA=$NSTA
-0.5 4.5 15 90 0 CB Time after PREM ${PHASE}-wave time (sec)
3.0 -0.7 15  0 0 CB Distance (deg)
END

# more text: script name and time stamp
echo "3.0 8.7 10 0 0 CB SCRIPT: c81.profile_zoom.XDYT" >! datetag1
date "+CREATION DATE: %m/%d/%y  %H:%M:%S" >! datetag2
echo "bp:" $B1 "to"  $B2 >! datetag4
paste datetag1 datetag2 datetag4 >! datetag3
pstext datetag3 -Jx -R -N -Wored -G0 -O -K >> $OUTFILE


if ( $FLAG_plotTYPE ==  2 ) then
# initiate coords for traces and curves
\cp $DIRSRC/abs_amp.cpt .
set maxvalue = `cat xyz.$TYPE.seismograms | awk '{ if ( $1 != ">" ) {print $3}}' | minmax -C | awk '{print $2}'`
cat xyz.$TYPE.seismograms | awk '{ if ($1 != ">" ) {print $1,$2,$3/'$maxvalue'} }' >! temp.d
cat temp.d | awk '{print $2,$1,$3*20}' >! psxy.temp
xyz2grd psxy.temp -Gamp.grd -N0 -I0.2/0.5 -R$RANGE -V
#xyz2grd psxy.temp -Gamp.grd -N0 -I1/0.5 -R$RANGE -V
grdimage amp.grd -Cabs_amp.cpt -J$SCALE -R$RANGE -O -K  >> $OUTFILE
\rm amp.grd psxy.temp temp.d abs_amp.cpt
endif

psbasemap -J$SCALE -R$RANGE -B"$BAXIS"WSne -K -O -P >> $OUTFILE






# plot TC
setenv TAUP_HOME  /NAS/patty/utils/TauP-2.0beta7
set PHASEfile = /NAS/patty/PKPPKP/TAUP_PLOTS/PPphase.color
echo $TAUP_HOME
set PHASElist = ( `cat  $PHASEfile | awk '{print $1}'` )
set COLORlist = ( `cat  $PHASEfile | awk '{print $2}'` )
set WTYPElist = ( `cat  $PHASEfile | awk '{print $3}'`)


set iph = 1
while ( $iph <= $#PHASElist )
set iPHASE = $PHASElist[$iph]
set iCOLOR = $COLORlist[$iph]
set iWTYPE = $WTYPElist[$iph]
echo $iWTYPE
$TAUP_HOME/bin/taup_curve -mod prem -h $EZ -ph $iPHASE -rel $PHASE
psxy taup_curve.gmt  -JX -R   -W1p/"$iCOLOR"$iWTYPE  $MGMT -K -O  >> $OUTFILE
@ iph ++
end
\rm taup_curve.gmt



# plot the records
if ( $FLAG_plotTYPE ==  1 ) then
psxy xy.$TYPE.seismograms -J$SCALE -R$RANGE -W1/0 $MGMT -O -K -:  >> $OUTFILE
endif


# close up plot
pstext -JX -R -O  << ! >> $OUTFILE
!

end

#some clean up, lists, tmp records, etc.
\rm *.?  datetag?
\rm *.LIST xy*seismograms
\rm  SAC2XYZOOM out.sac out.sac2xyzoom
\rm INFIL awkfile $EVENT.m.process
# return to our pwd
cd $DIRPWD

 
echo "-------------------------------------------------------------"
echo "                c81.profile_zoom.XDYT: DONE"
echo "-------------------------------------------------------------"
echo " "

#EOF
