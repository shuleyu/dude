#!/bin/csh
# EJG/PL March 2010
# 
#===========================================================
#                     c03.map_citydist 
#===========================================================
# this script uses GMT to plot a map showing
# contours of constant epicentral distance
# from the earthquake, along with some major
# cities.  The list of cities is defined in
# this script, down below and easily changed/edited.
# just a fun map, maybe more of an outreach thing.
#
# big thanks to Kevin Eagar who came up w/ the idea
# to use grdmath for distance contours, then showed
# me how to do it!

echo " "
echo "-------------------------------------------------------------"
echo "                c03.map_citydist:     STARTING "
echo "-------------------------------------------------------------"

# INPUT: just some event info from 1 line of our info file

set EVENT     = $1
set DIRSRC    = $2
set DIRDATA   = $3
set DIRPLOT   = $4


# OUTPUT: postscript plot

set OUTFILE = $DIRPLOT/$EVENT.c03.map_citydist.ps


# go to the data directory
set DIRPWD = ` pwd `
cd $DIRDATA/$EVENT
source $DIRSRC/c0.ENV_setting

# define the master file location / name
set MASTER = $DIRDATA/$EVENT/eventStation.$EVENT

awk ' NR>1 {print $0}' $MASTER >! INFIL

# define event coords and mag
set COORDS = ` awk ' NR==1 {print $11,$12,$13,$16}' INFIL `
set NSTA   = ` wc -l INFIL | awk '{print $1}' `
set ELAT   = $COORDS[1] 
set ELON   = $COORDS[2] 
set EZ     = $COORDS[3] 
set EMAG   = $COORDS[4] 

# make our input file for cities:
# (NOTE: these are crude locations...)
# to add your own cities, DO IT HERE!
cat << EOF >! xy.cities
72.7 19 Bombay
-67 10.5 Caracas
-17.3 40.2 Dakar
112.2 22.3 Hong_Kong
-157.8 21.3 Honolulu
0 51.5 London
-99 19.5 Mexico_City
37.5 55.7 Moscow
37 -1.5 Nairobi
-74 40.8 New_York
151 -34 Sydney
-70.7 -33.5 Santiago
-122.7 37.8 San_Francisco
139.7 35.7 Tokyo
EOF

# count stations
set NSTA = ` wc -l xy.cities | awk '{print $1}' `

# make an event lat/lon file:
echo $ELAT $ELON >! xy.eq

# great circle paths:
# make the files that will contain the event lat/lon and station
# lat/lon and the GMT delimeter (">") for our great circle paths
if (-e xy.gcpaths ) \rm xy.gcpaths
@ m = 1
while ( $m <= $NSTA )
    echo '>' >>! xy.gcpaths
    echo $ELAT $ELON >>! xy.gcpaths
    awk ' NR=='$m' {print $2,$1} ' xy.cities >>! xy.gcpaths
    @ m++
end

#=======================================================================
#                        time  to  plot!
#=======================================================================
# define the GMT plot bounds and size:
set REG = -R0/360/-90/90
set PROJ = -JR$ELON/7.0i

# first plot the coast lines /land
# define some colors
set LAND  = 150/150/100
set WATER = 100/150/200
pscoast $REG $PROJ  -Dl -A40000 -W3/50 \
   -G$LAND -S$WATER -X0.70i -Y5.5i -V -P -K >! $OUTFILE

# define the color for the lat/lon grid in plot, then plot, & undefine it
gmtset BASEMAP_FRAME_RGB = 100/100/100
psbasemap $REG $PROJ -V -Bg45 -O -K >> $OUTFILE
gmtset BASEMAP_FRAME_RGB = 0/0/0

# define color of distance contours and labels
set CONTCOL = 220/220/220

# the location of the numbering of contours is being defined
# here to happen between event coords and
# some shift in longitude
set ELAT2 = -80
set ELON2 = ` echo $ELON | awk '{print 1.*$1 + 160}' `

# use GMT's grdmath to compute a file with distances across the
# whole globe, from the EQ:
grdmath $REG -I1 $ELON $ELAT SDIST = dist.grd

# draw the equal distance contours (see the GMT man page for more
# info on some of these choices. again, thanks to Kevin Eagar for this
# idea of using gmtmath w/ grdcontour for this application
grdcontour dist.grd $PROJ -A10+s11+f1+k${CONTCOL}+ap -Gl$ELON/$ELAT/$ELON2/$ELAT2 \
    -S8 -W0.5/$CONTCOL -B0 -P -O -K >> $OUTFILE

# plot the great circle paths
psxy xy.gcpaths $REG $PROJ -: $MGMT -K -O -W8/blue >> $OUTFILE

# now plot the EQ and stations (erh, i mean cities)
psxy xy.eq     $REG $PROJ -: -Sa0.2i -K -O -W3/0 -Gred >> $OUTFILE
psxy xy.cities $REG $PROJ    -St0.15i -K -O -W1/0 -Gyellow >> $OUTFILE

# plot titles:
# first, break apart event name for Big Title:
set YYYY = ` echo $EVENT | cut -c1-4 `
set MM   = ` echo $EVENT | cut -c5-6 `
set DD   = ` echo $EVENT | cut -c7-8 `
set HH   = ` echo $EVENT | cut -c9-10 `
set MIN  = ` echo $EVENT | cut -c11-12 `

# plot a title above the top of the map
# and plot a big title of the date higher up:
# big title first
pstext $REG $PROJ -N -O -K -Y0.8i << END >> $OUTFILE
$ELON 90 20 0 0 CB ${MM}/${DD}/$YYYY ${HH}:${MIN}
END
## now littler title:
pstext $REG $PROJ -N -O -K -Y-0.6i -K << END >> $OUTFILE
$ELON 90 14 0 0 CB $EVENT  LAT=$ELAT LON=$ELON Z=$EZ Mb=$EMAG
END

# now plot the city names
# first, make the input file:
awk '{print $1+5,$2,"11 0 5 ML",$3}' xy.cities >! xy.text
# now plot
pstext xy.text $REG $PROJ -N -O -Y-0.2i -K >> $OUTFILE

# we will now quickly calculate the distances to the
# cities, and print a list below the globes.
# first, make the fortran code:  (hear the duct tape being unrolled?)
echo "        read(*,*)elat1,elon1,elat2,elon2" >! dist.f
echo "        x=atan(.993277*tan(elat1/57.29578))" >> dist.f
echo "        xlt2=atan(.993277*tan(elat2/57.29578))" >> dist.f
echo "        ccc=cos(x)*cos((elon1-elon2)/57.29578)" >> dist.f
echo "        xcdist=sin(xlt2)*sin(x)+cos(xlt2)*ccc" >> dist.f
echo "        r=57.29578*acos(xcdist)" >> dist.f
echo "        write(*,*)r" >> dist.f
echo "        stop" >> dist.f
echo "        end" >> dist.f
$FCOMP dist.f -o DIST

# now run it to get distances
if(-e r.cities) \rm r.cities
@ m = 1
while ( $m <= $NSTA )
set XYCITY = `  awk ' NR=='$m' {print $2,$1} ' xy.cities `
DIST << END >>! r.cities
$ELAT $ELON $XYCITY[1] $XYCITY[2]
END
@ m++
end

# paste it with city names into a new file, after some header lines
awk '{ print $3 }' xy.cities >! text
paste r.cities text | sort -n | awk '{ printf "%14s %5.1f\n", $2, $1}' >! text,r
awk '{ print "0",NR,"12 0 0 ML",$1 }' text,r >! citytext
awk '{ print "10",NR,"12 0 0 ML",$2 }' text,r >! rtext
echo "0 -0.4 14 0 7 ML City" >! header_city
echo "10 -0.4 14 0 7 ML Distance (deg)" >! header_dist
cat header_city citytext >! xy.citytext
cat header_dist rtext >! xy.rtext

# now plot the lower list, first cities, then dist
pstext xy.citytext -R0/20/0/20 -JX4i/-4i -N -O -X2.0i -Y-4.5i -K >> $OUTFILE
pstext xy.rtext -R -JX -N -O -K >> $OUTFILE

# finally: script name and time stamp next:
echo "0.0 0.0 10 0 0 LM SCRIPT: c03.map_citydist" >! datetag1
date "+CREATION DATE: %m/%d/%y  %H:%M:%S" >! datetag2
paste datetag1 datetag2 >! datetag3
pstext datetag3 -JX -R -N -Wored -G0 -O -X-0.8i -Y-3.5i >> $OUTFILE

echo "c03.map_citydist: just finished making PLOT FILE = $OUTFILE"

# clean up
\rm .gmt* xy.eq xy.cities xy.gcpaths xy.text text xy.citytext
\rm INFIL DIST dist.f r.cities dist.grd text,r xy.rtext
\rm header_city header_dist rtext citytext datetag?

# return to our pwd
cd $DIRPWD

echo "-------------------------------------------------------------"
echo "                c03.map_citydist:     DONE "
echo "-------------------------------------------------------------"
echo " "

#EOF
